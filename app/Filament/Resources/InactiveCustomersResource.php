<?php

namespace App\Filament\Resources;

use App\Filament\Resources\CustomersResource\Pages;
use App\Filament\Resources\CustomersResource\RelationManagers;
use App\Helpers\FileHelper;
use App\Models\Customers;
use Filament\Forms;
use Filament\Forms\Components\DatePicker;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use HusamTariq\FilamentDatabaseSchedule\Filament\Columns\ActionGroup;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use Filament\Tables\Filters\Filter;

class InactiveCustomersResource extends Resource
{
    protected static ?string $model = Customers::class;

    protected static ?string $navigationIcon = 'heroicon-o-face-frown';

    protected static ?string $navigationGroup = 'Customers';

    protected static ?string $navigationLabel = 'Inactive';

    protected static ?int $navigationSort = 4;

    public static function form(Form $form): Form
    {
        return $form
            ->schema(ActiveCustomersResource::getFormSchema())->columns(1);
    }

    public static function table(Table $table): Table
    {
        return $table->defaultPaginationPageOption(50)
            ->columns(ActiveCustomersResource::getTableSchema())
            ->filters([
            ])
            ->actions([
                ActionGroup::make([
                    Tables\Actions\EditAction::make()
                        ->slideOver()
                        ->modalWidth('md'),
                    Tables\Actions\DeleteAction::make()
                ])
            ])
            ->defaultSort('company_name', 'asc')
            ->bulkActions([
//                Tables\Actions\BulkActionGroup::make([
//                    Tables\Actions\DeleteBulkAction::make(),
//                ]),
            ]);
    }

    public static function getFormSchema()
    {
        return [
            TextInput::make('company_name')
                ->required()
                ->maxLength(255),
            TextInput::make('phone_number')
                ->required()
                ->maxLength(14),
            TextInput::make('tax_number')
                ->required()
                ->maxLength(20),
            TextInput::make('address')
                ->required()
                ->maxLength(255),
            TextInput::make('country')
                ->required()
                ->maxLength(255),
            TextInput::make('date_of_payment')
                ->numeric()
                ->maxValue(31)
                ->minValue(1)
                ->required(),
            TextInput::make('currency')
                ->required()
                ->maxLength(255),
            TextInput::make('email')
                ->email()
                ->required()
                ->maxLength(255),
            Forms\Components\ToggleButtons::make('status')
                ->label('Status')
                ->grouped()
                ->colors(FileHelper::boolean_colors())
                ->default(1)
                ->options([
                    '1' => 'Active',
                    '0' => 'Inactive',
                ]),
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListInactiveCustomers::route('/'),
//            'create' => Pages\CreateCustomers::route('/create'),
//            'edit' => Pages\EditCustomers::route('/{record}/edit'),
        ];
    }

    public static function getNavigationLabel(): string
    {
        return __('admin_settings.inactive_customers');
    }

    public static function getNavigationGroup(): ?string
    {
        return __('admin_settings.customers');
    }

    public static function getPluralLabel(): ?string
    {
        return __('admin_settings.customers'); // TODO: Change the autogenerated stub
    }
}
