<?php

namespace App\Filament\Resources;

use App\Filament\Resources\CountriesResource\Pages;
use App\Filament\Resources\CountriesResource\RelationManagers;
use App\Models\Countries;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use HusamTariq\FilamentDatabaseSchedule\Filament\Columns\ActionGroup;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use Nette\Utils\Image;

class CountriesResource extends Resource
{
    protected static ?string $model = Countries::class;

    protected static ?string $navigationIcon = 'heroicon-o-globe-europe-africa';
    protected static ?string $navigationGroup = 'Settings';
    protected static ?int $navigationSort = 5;
    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\TextInput::make('name')
                    ->label(__('admin_settings.name')),
                Forms\Components\TextInput::make('flag_id')
                    ->label(__('admin_settings.flag'))
                    ->numeric()
            ])->columns(1);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->defaultPaginationPageOption(50)
            ->defaultSort('name')
            ->columns([
                Tables\Columns\TextColumn::make('name')
                    ->label(__('admin_settings.name'))
                    ->sortable(),
                Tables\Columns\ImageColumn::make('flag_ids')
                    ->label(__('admin_settings.flag'))
                    ->defaultImageUrl(fn($record) =>'/flags/' . $record->flag_id . '.svg')
                    ->extraAttributes([
                        'style' => 'filter: drop-shadow(black 3px 3px 3px)'
                    ])
            ])
            ->filters([
                //
            ])
            ->actions([
                ActionGroup::make([
                    Tables\Actions\EditAction::make()
                        ->slideOver()
                        ->modalWidth('md'),
                    Tables\Actions\DeleteAction::make()
                ]),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListCountries::route('/'),
//            'create' => Pages\CreateCountries::route('/create'),
//            'edit' => Pages\EditCountries::route('/{record}/edit'),
        ];
    }

    public static function getNavigationLabel(): string
    {
        return __('admin_settings.countries');
    }

    public static function getNavigationGroup(): ?string
    {
        return __('admin_settings.settings');
    }

    public static function getPluralLabel(): ?string
    {
        return __('admin_settings.countries'); // TODO: Change the autogenerated stub
    }
}
