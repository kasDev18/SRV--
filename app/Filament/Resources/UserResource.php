<?php

namespace App\Filament\Resources;

use App\Filament\Resources\UserResource\Pages;
use App\Filament\Resources\UserResource\RelationManagers;
use App\Models\User;
use Filament\Forms;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use HusamTariq\FilamentDatabaseSchedule\Filament\Columns\ActionGroup;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class UserResource extends Resource
{
    protected static ?string $model = User::class;

    protected static ?string $navigationIcon = 'heroicon-o-users';
    protected static ?string $navigationGroup = 'Settings';
    protected static ?int $navigationSort = 5;
    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                TextInput::make('name')
                    ->label(__('admin_settings.name'))
                    ->required(),
                TextInput::make('email')
                    ->label(__('admin_settings.email'))
                    ->email()
                    ->required()
                    ->unique(ignoreRecord: true)
                    ->label('E-mail'),
                TextInput::make('password')
                    ->label(__('admin_settings.password'))
                    ->password()
                    ->required($form->getOperation() === "create")
                    ->dehydrateStateUsing(fn ($state) => bcrypt($state))
            ])->columns(1);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->defaultPaginationPageOption(50)
            ->defaultSort('name')
            ->columns([
                TextColumn::make('name')
                    ->label(__('admin_settings.name'))
                    ->sortable(),
                TextColumn::make('email')
                    ->label(__('admin_settings.email'))
                    ->sortable(),
                TextColumn::make('created_at')
                    ->label(__('admin_settings.created_at'))
                    ->sortable(),
            ])
            ->filters([
                //
            ])
            ->actions([
                ActionGroup::make([
                    Tables\Actions\EditAction::make()
                        ->tooltip('Edit'),
                    Tables\Actions\DeleteAction::make()
                        ->tooltip('Delete')
                ])
            ])
            ->bulkActions([

            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListUsers::route('/'),
//            'create' => Pages\CreateUser::route('/create'),
//            'edit' => Pages\EditUser::route('/{record}/edit'),
        ];
    }

    public static function getNavigationLabel(): string
    {
        return __('admin_settings.users');
    }

    public static function getNavigationGroup(): ?string
    {
        return __('admin_settings.settings');
    }

    public static function getPluralLabel(): ?string
    {
        return __('admin_settings.users'); // TODO: Change the autogenerated stub
    }
}
